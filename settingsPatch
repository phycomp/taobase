--- ori2.settings.py	2018-08-23 14:46:57.603241769 +0800
+++ settings.py	2018-08-23 14:39:07.339917055 +0800
@@ -1,232 +1,120 @@
-from os import pardir, environ
-from os.path import dirname, abspath, join as path_join
+"""
+Django settings for tao project.
 
+Generated by 'django-admin startproject' using Django 2.2.
 
-PROJECT_ROOT = abspath(path_join(dirname(__file__), pardir))
-PACKAGE_ROOT = abspath(dirname(__file__))
-BASE_DIR = PACKAGE_ROOT
+For more information on this file, see
+https://docs.djangoproject.com/en/dev/topics/settings/
 
-DEBUG = True
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.postgresql',
-        #'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': 'TAO',
-        'USER':'samuel',
-        'PASSWORD':'2riixdii',
-        #'NAME': 'dev.db',
-    }
-}
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/dev/ref/settings/
+"""
 
-ALLOWED_HOSTS = [
-    'localhost',
-    '192.168.43.38',
-]
+import os
 
-# Local time zone for this installation. Choices can be found here:
-# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
-# although not all choices may be available on all operating systems.
-# On Unix systems, a value of None will cause Django to use the same
-# timezone as the operating system.
-# If running in a Windows environment this must be set to the same as your
-# system time zone.
-TIME_ZONE = 'UTC'
+# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
 
-# Language code for this installation. All choices can be found here:
-# http://www.i18nguy.com/unicode/language-identifiers.html
-LANGUAGE_CODE = 'en-us'
 
-SITE_ID = int(environ.get('SITE_ID', 1))
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/
 
-# If you set this to False, Django will make some optimizations so as not
-# to load the internationalization machinery.
-USE_I18N = True
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'zu=+t@5*2zdzcm8kci0@(dul71x(*!zxcp6+si7cxz(5c%l9&&'
 
-# If you set this to False, Django will not format dates, numbers and
-# calendars according to the current locale.
-USE_L10N = True
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
 
-# If you set this to False, Django will not use timezone-aware datetimes.
-USE_TZ = True
+ALLOWED_HOSTS = []
 
-# Absolute filesystem path to the directory that will hold user-uploaded files.
-# Example: '/home/media/media.lawrence.com/media/'
-MEDIA_ROOT = path_join(PROJECT_ROOT, 'assets')
-
-# URL that handles the media served from MEDIA_ROOT. Make sure to use a
-# trailing slash.
-# Examples: 'http://media.lawrence.com/media/', 'http://example.com/media/'
-MEDIA_URL = '/assets/'
-
-# Absolute path to the directory static files should be collected to.
-# Don't put anything in this directory yourself; store your static files
-# in apps' 'static/' subdirectories and in STATICFILES_DIRS.
-# Example: '/home/media/media.lawrence.com/static/'
-STATIC_ROOT = path_join(PROJECT_ROOT, 'static')
 
-# URL prefix for static files.
-# Example: 'http://media.lawrence.com/static/'
-STATIC_URL = '/static/'
+# Application definition
 
-# Additional locations of static files
-STATICFILES_DIRS=[
-    path_join(PROJECT_ROOT, 'static', 'dist'),
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
 ]
 
-STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
-
-# List of finder classes that know how to find static files in
-# various locations.
-STATICFILES_FINDERS = [
-    'django.contrib.staticfiles.finders.FileSystemFinder',
-    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
 ]
 
-# Make this unique, and don't share it with anybody.
-SECRET_KEY = '9ex%h6$v4b_q7bkx#kfuu68nnt$e!fack^_0+jalt3&6anrleq'
+ROOT_URLCONF = 'tao.urls'
 
 TEMPLATES = [
     {
-        #'BACKEND': 'django.template.backends.jinja2.Jinja2',
         'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [
-            path_join(PACKAGE_ROOT, 'templates'),
-        ],
+        'DIRS': [],
         'APP_DIRS': True,
         'OPTIONS': {
-            'debug':DEBUG,
-            #'environment': "main.jinja2.environment",
             'context_processors': [
-                'django.contrib.auth.context_processors.auth',
                 'django.template.context_processors.debug',
-                'django.template.context_processors.i18n',
-                'django.template.context_processors.media',
-                'django.template.context_processors.static',
-                'django.template.context_processors.tz',
                 'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
                 'django.contrib.messages.context_processors.messages',
-                #'django.core.context_processors.auth',
-                #'account.context_processors.account',
-                #'tao.context_processors.settings'
             ],
         },
     },
 ]
 
-MIDDLEWARE = [
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-    #'account.middleware.LocaleMiddleware',
-    'member.middleware.LoginRequiredMiddleware',
-    'member.middleware.PostAuthMiddleWare',
-    #'member.middleware.MiddlewareMixin',
-]
-
-ROOT_URLCONF = 'tao.urls'
-
-# Python dotted path to the WSGI application used by Django's runserver.
 WSGI_APPLICATION = 'tao.wsgi.application'
 
-DJANGO_APPS= [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.messages',
-    'django.contrib.sessions',
-    'django.contrib.sites',
-    'django.contrib.staticfiles']
-BASE_APPS=['tao', 'member', 'medium', 'book', 'haystack']
-    #'tts',
-    #'qrauth',
-INSTALLED_APPS =DJANGO_APPS+BASE_APPS
-    #'bootstrapform', 'pinax.templates',
-    #'pinax.blog', 'pinax.images', 'pinax.webanalytics', 'account', 'pinax.apps.account',
-AUTHOR_APPS=[
-    'sutra',
-    'tag',
-    'friend',
-    'post',
-    'blog',
-    'forum',
-    'tug',
-    'gallery',
-    'ge2ge'
-]
-INSTALLED_APPS+=AUTHOR_APPS
 
-# Grab your own GA id and replace UA-XXXXXXXX or use another
-# pinax-webanalytics provider, or roll your own template.
-# PINAX_WEBANALYTICS_SETTINGS = {
-#     'google': {
-#         2: 'UA-XXXXXXXX',
-#     }
-# }
-
-# Turn off the admin js; probably should remove from the form
-PINAX_BLOG_ADMIN_JS = []
-
-ADMIN_URL = 'admin:index'
-CONTACT_EMAIL = 'support@example.com'
-
-# A sample logging configuration. The only tangible logging
-# performed by this configuration is to send an email to
-# the site admins on every HTTP 500 error when DEBUG=False.
-# See http://docs.djangoproject.com/en/dev/topics/logging for
-# more details on how to customize your logging configuration.
-LOGGING = {
-    'version': 1,
-    'disable_existing_loggers': False,
-    'filters': {
-        'require_debug_false': {
-            '()': 'django.utils.log.RequireDebugFalse'
-        }
-    },
-    'handlers': {
-        'mail_admins': {
-            'level': 'ERROR',
-            'filters': ['require_debug_false'],
-            'class': 'django.utils.log.AdminEmailHandler'
-        }
-    },
-    'loggers': {
-        'django.request': {
-            'handlers': ['mail_admins'],
-            'level': 'ERROR',
-            'propagate': True,
-        },
+# Database
+# https://docs.djangoproject.com/en/dev/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
     }
 }
 
-FIXTURE_DIRS = [
-    path_join(PROJECT_ROOT, 'fixtures'),
-]
 
-EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
-#AUTHENTICATION_BACKENDS = [
-#    #'social_core.backends.twitter.TwitterOAuth',
-#    'account.auth_backends.UsernameAuthenticationBackend',
-#]
-TEMPLATE_CONTEXT_PROCESSORS = [
-    'account.context_processors.account',
+# Password validation
+# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
 ]
-AUTH_USER_MODEL='member.Member'
-#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
-OUTPUT_DIR = path_join(BASE_DIR, 'generated')
-MAX_SOUND_LIFE = 60*60*12   # seconds of sound file storing
-#DATA_UPLOAD_MAX_NUMBER_FIELDS=None
-
-WEBMASTER='phycomp@gmail.com'
-LOGIN_URL='/member/login/'
-whooshIndex=path_join(dirname(__file__), 'whooshIndex')
-HAYSTACK_CONNECTIONS={
-'default':{
-	'ENGINE':'haystack.backends.whoosh_backend.WhooshEngine',
-	'PATH':whooshIndex,
-	},
-}
-USE_TZ=True
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/dev/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/dev/howto/static-files/
+
+STATIC_URL = '/static/'
