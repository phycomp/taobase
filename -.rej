*** /dev/null
--- /dev/null
***************
*** 1,2
- """
- Django settings for tao project.
--- 1,2 -----
+ from os import pardir, environ
+ from os.path import dirname, abspath, join as path_join
***************
*** 4
- Generated by 'django-admin startproject' using Django 2.2.
--- 0 -----
***************
*** 6,7
- For more information on this file, see
- https://docs.djangoproject.com/en/dev/topics/settings/
--- 5,7 -----
+ PROJECT_ROOT = abspath(path_join(dirname(__file__), pardir))
+ PACKAGE_ROOT = abspath(dirname(__file__))
+ BASE_DIR = PACKAGE_ROOT
***************
*** 9,11
- For the full list of settings and their values, see
- https://docs.djangoproject.com/en/dev/ref/settings/
- """
--- 9 -----
+ DEBUG = True
***************
*** 13
- import os
--- 11,20 -----
+ DATABASES = {
+     'default': {
+         'ENGINE': 'django.db.backends.postgresql',
+         #'ENGINE': 'django.db.backends.sqlite3',
+         'NAME': 'TAO',
+         'USER':'samuel',
+         'PASSWORD':'2riixdii',
+         #'NAME': 'dev.db',
+     }
+ }
***************
*** 15,16
- # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
- BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
--- 22,25 -----
+ ALLOWED_HOSTS = [
+     'localhost',
+     '192.168.43.38',
+ ]
***************
*** 27,28
- # Quick-start development settings - unsuitable for production
- # See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/
--- 44,46 -----
+ # Language code for this installation. All choices can be found here:
+ # http://www.i18nguy.com/unicode/language-identifiers.html
+ LANGUAGE_CODE = 'en-us'
***************
*** 30,31
- # SECURITY WARNING: keep the secret key used in production secret!
- SECRET_KEY = 'zu=+t@5*2zdzcm8kci0@(dul71x(*!zxcp6+si7cxz(5c%l9&&'
--- 48 -----
+ SITE_ID = int(environ.get('SITE_ID', 1))
***************
*** 33,34
- # SECURITY WARNING: don't run with debug turned on in production!
- DEBUG = True
--- 50,52 -----
+ # If you set this to False, Django will make some optimizations so as not
+ # to load the internationalization machinery.
+ USE_I18N = True
***************
*** 36
- ALLOWED_HOSTS = []
--- 54,56 -----
+ # If you set this to False, Django will not format dates, numbers and
+ # calendars according to the current locale.
+ USE_L10N = True
***************
*** 41
- # Application definition
--- 63,76 -----
+ # Absolute filesystem path to the directory that will hold user-uploaded files.
+ # Example: '/home/media/media.lawrence.com/media/'
+ MEDIA_ROOT = path_join(PROJECT_ROOT, 'assets')
+ 
+ # URL that handles the media served from MEDIA_ROOT. Make sure to use a
+ # trailing slash.
+ # Examples: 'http://media.lawrence.com/media/', 'http://example.com/media/'
+ MEDIA_URL = '/assets/'
+ 
+ # Absolute path to the directory static files should be collected to.
+ # Don't put anything in this directory yourself; store your static files
+ # in apps' 'static/' subdirectories and in STATICFILES_DIRS.
+ # Example: '/home/media/media.lawrence.com/static/'
+ STATIC_ROOT = path_join(PROJECT_ROOT, 'static')
***************
*** 43,49
- INSTALLED_APPS = [
-     'django.contrib.admin',
-     'django.contrib.auth',
-     'django.contrib.contenttypes',
-     'django.contrib.sessions',
-     'django.contrib.messages',
-     'django.contrib.staticfiles',
--- 78,84 -----
+ # URL prefix for static files.
+ # Example: 'http://media.lawrence.com/static/'
+ STATIC_URL = '/static/'
+ 
+ # Additional locations of static files
+ STATICFILES_DIRS=[
+     path_join(PROJECT_ROOT, 'static', 'dist'),
***************
*** 52,59
- MIDDLEWARE = [
-     'django.middleware.security.SecurityMiddleware',
-     'django.contrib.sessions.middleware.SessionMiddleware',
-     'django.middleware.common.CommonMiddleware',
-     'django.middleware.csrf.CsrfViewMiddleware',
-     'django.contrib.auth.middleware.AuthenticationMiddleware',
-     'django.contrib.messages.middleware.MessageMiddleware',
-     'django.middleware.clickjacking.XFrameOptionsMiddleware',
--- 87,93 -----
+ STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
+ 
+ # List of finder classes that know how to find static files in
+ # various locations.
+ STATICFILES_FINDERS = [
+     'django.contrib.staticfiles.finders.FileSystemFinder',
+     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
***************
*** 62
- ROOT_URLCONF = 'tao.urls'
--- 96,97 -----
+ # Make this unique, and don't share it with anybody.
+ SECRET_KEY = '9ex%h6$v4b_q7bkx#kfuu68nnt$e!fack^_0+jalt3&6anrleq'
***************
*** 68
-         'DIRS': [],
--- 104,106 -----
+         'DIRS': [
+             path_join(PACKAGE_ROOT, 'templates'),
+         ],
***************
*** 81
-                 'django.contrib.auth.context_processors.auth',
--- 0 -----
***************
*** 91,95
- WSGI_APPLICATION = 'tao.wsgi.application'
- 
- 
- # Database
- # https://docs.djangoproject.com/en/dev/ref/settings/#databases
--- 138,149 -----
+ MIDDLEWARE = [
+     'django.contrib.sessions.middleware.SessionMiddleware',
+     'django.middleware.common.CommonMiddleware',
+     'django.middleware.csrf.CsrfViewMiddleware',
+     'django.contrib.auth.middleware.AuthenticationMiddleware',
+     'django.contrib.messages.middleware.MessageMiddleware',
+     'django.middleware.clickjacking.XFrameOptionsMiddleware',
+     #'account.middleware.LocaleMiddleware',
+     'member.middleware.LoginRequiredMiddleware',
+     'member.middleware.PostAuthMiddleWare',
+     #'member.middleware.MiddlewareMixin',
+ ]
***************
*** 97,102
- DATABASES = {
-     'default': {
-         'ENGINE': 'django.db.backends.sqlite3',
-         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
-     }
- }
--- 151 -----
+ ROOT_URLCONF = 'tao.urls'
***************
*** 107,108
- # Password validation
- # https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators
--- 158,183 -----
+ DJANGO_APPS= [
+     'django.contrib.admin',
+     'django.contrib.auth',
+     'django.contrib.contenttypes',
+     'django.contrib.messages',
+     'django.contrib.sessions',
+     'django.contrib.sites',
+     'django.contrib.staticfiles']
+ BASE_APPS=['tao', 'member', 'medium', 'book', 'haystack']
+     #'tts',
+     #'qrauth',
+ INSTALLED_APPS =DJANGO_APPS+BASE_APPS
+     #'bootstrapform', 'pinax.templates',
+     #'pinax.blog', 'pinax.images', 'pinax.webanalytics', 'account', 'pinax.apps.account',
+ AUTHOR_APPS=[
+     'sutra',
+     'tag',
+     'friend',
+     'post',
+     'blog',
+     'forum',
+     'tug',
+     'gallery',
+     'ge2ge'
+ ]
+ INSTALLED_APPS+=AUTHOR_APPS
***************
*** 110,115
- AUTH_PASSWORD_VALIDATORS = [
-     {
-         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-     },
-     {
-         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
--- 185,210 -----
+ # Grab your own GA id and replace UA-XXXXXXXX or use another
+ # pinax-webanalytics provider, or roll your own template.
+ # PINAX_WEBANALYTICS_SETTINGS = {
+ #     'google': {
+ #         2: 'UA-XXXXXXXX',
+ #     }
+ # }
+ 
+ # Turn off the admin js; probably should remove from the form
+ PINAX_BLOG_ADMIN_JS = []
+ 
+ ADMIN_URL = 'admin:index'
+ CONTACT_EMAIL = 'support@example.com'
+ 
+ # A sample logging configuration. The only tangible logging
+ # performed by this configuration is to send an email to
+ # the site admins on every HTTP 500 error when DEBUG=False.
+ # See http://docs.djangoproject.com/en/dev/topics/logging for
+ # more details on how to customize your logging configuration.
+ LOGGING = {
+     'version': 1,
+     'disable_existing_loggers': False,
+     'filters': {
+         'require_debug_false': {
+             '()': 'django.utils.log.RequireDebugFalse'
+         }
***************
*** 117,118
-     {
-         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
--- 212,217 -----
+     'handlers': {
+         'mail_admins': {
+             'level': 'ERROR',
+             'filters': ['require_debug_false'],
+             'class': 'django.utils.log.AdminEmailHandler'
+         }
***************
*** 120,138
-     {
-         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-     },
- ]
- 
- 
- # Internationalization
- # https://docs.djangoproject.com/en/dev/topics/i18n/
- 
- LANGUAGE_CODE = 'en-us'
- 
- TIME_ZONE = 'UTC'
- 
- USE_I18N = True
- 
- USE_L10N = True
- 
- USE_TZ = True
- 
--- 219,226 -----
+     'loggers': {
+         'django.request': {
+             'handlers': ['mail_admins'],
+             'level': 'ERROR',
+             'propagate': True,
+         },
+     }
+ }
***************
*** 140,141
- # Static files (CSS, JavaScript, Images)
- # https://docs.djangoproject.com/en/dev/howto/static-files/
--- 228,230 -----
+ FIXTURE_DIRS = [
+     path_join(PROJECT_ROOT, 'fixtures'),
+ ]
***************
*** 143
- STATIC_URL = '/static/'
--- 232,255 -----
+ EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
+ #AUTHENTICATION_BACKENDS = [
+ #    #'social_core.backends.twitter.TwitterOAuth',
+ #    'account.auth_backends.UsernameAuthenticationBackend',
+ #]
+ TEMPLATE_CONTEXT_PROCESSORS = [
+     'account.context_processors.account',
+ ]
+ AUTH_USER_MODEL='member.Member'
+ #BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+ OUTPUT_DIR = path_join(BASE_DIR, 'generated')
+ MAX_SOUND_LIFE = 60*60*12   # seconds of sound file storing
+ #DATA_UPLOAD_MAX_NUMBER_FIELDS=None
+ 
+ WEBMASTER='phycomp@gmail.com'
+ LOGIN_URL='/member/login/'
+ whooshIndex=path_join(dirname(__file__), 'whooshIndex')
+ HAYSTACK_CONNECTIONS={
+ 'default':{
+ 	'ENGINE':'haystack.backends.whoosh_backend.WhooshEngine',
+ 	'PATH':whooshIndex,
+ 	},
+ }
+ USE_TZ=True
